#### テスト用メッセージ ######

test.message01=メッセージ：${#formatter.format('%1.2f', #validatedValue)}は、{min}～{max}の範囲で入力してください。

test.recursive=再帰的なメッセージ：{abc}=${#value}
min=3

test.recursiveMax=再帰的なメッセージ：{abc}=${#value}
max={value}

test.varWithArray=配列の指定：「${#join(#arrays, ',')}」

test.varWithAnno=変数の初期フォーマット：アノテーション「{anno}」
test.varWithEnum=変数の初期フォーマット：列挙型「{enum}」
test.varWithClass=変数の初期フォーマット：クラス「{class}」
test.varWithClasses=変数の初期フォーマット：クラス「${#join(#classes, ', ')}」

## BeanValidation のエラーメッセージ
javax.validation.constraints.NotEmpty.message=${#empty(#propertyName)? '' : #propertyName + 'の'}値は必須です。
javax.validation.constraints.NotBlank.message=${#empty(#propertyName)? '' : #propertyName + 'の'}値は必須です。
javax.validation.constraints.PositiveOrZero.message=${#empty(#propertyName)? '' : #propertyName + 'の値は、'}0以上の値を設定してください。
javax.validation.constraints.Max.message=${#empty(#propertyName)? '' : #propertyName + 'の値は、'}{value}より同じか小さい値を設定してください。
javax.validation.constraints.Min.message=${#empty(#propertyName)? '' : #propertyName + 'の値は、'}{value}より同じか大きい値を設定してください。

propertyName.SampleBean.name=サンプルの名前
propertyName.name=名前
propertyName.age=年齢
